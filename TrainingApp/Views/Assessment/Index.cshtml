@model AssessmentViewModel
<!--
/// <summary>
/// Module purpose: View for Assessment Monitor page where examiners can create assignements
/// Authors: Hansol Lee / Jei Yang
/// Date: Oct 26, 2022
/// Source: Created for the COMP7022 project
/// Revision History:
///
/// </summary>
-->
@{
    ViewData["Title"] = "Assessment Page";
}

@section Scripts
{
    <script src="@Url.Content("~/js/pages/assessment/assessment.js")"></script>
}

@section Styles {
    <link href="@Url.Content("~/css/pages/assessment.css")" rel="stylesheet" type="text/css" />
}

<hr class="solid" />

<div class="page-wrapper">
    <div class="page-breadcrumb">
        <div class="row align-items-center">
            <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                <h3 class="page-title">Assessment</h3>
            </div>
        </div>
        @if (!Model.IsTraineeView)
        {
            <button id="createAssessmentModalBtn"
                    class="btn btn-primary mt20" type="button">
                <i class="fas fa-plus-circle"></i>
                NEW
            </button>
        }

    </div>

    <div class="bg-white m20 p20">
        <div class="row">
            <div class="col-md-12 col-lg-12 col-sm-12">
                <div class="white-box">
                    <div class="table-responsive">
                        <table class="table no-wrap table-hover">
                            <thead>
                                <tr>
                                    <th class="border-top-0">NAME</th>
                                    <th class="border-top-0">DATE</th>
                                    <th class="border-top-0">EXAMINER</th>
                                    <th class="border-top-0">TRAINEE(S)</th>
                                    <th class="border-top-0">SIGNED</th>
                                    <th class="border-top-0">OPTIOPNS</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var assessment in Model.Assessments)
                                {
                                    var trainee = Model.Users.Where(u => u.ID == assessment.TraineeID).FirstOrDefault();
                                    string traineeName = (trainee != null) ? trainee.FirstName + " " + trainee.LastName : string.Empty;

                                    var examiner = Model.Users.Where(u => u.ID == assessment.ExaminerID).FirstOrDefault();
                                    string examinerName = (examiner != null) ? examiner.FirstName + " " + examiner.LastName : string.Empty;

                                    string signedResult = "";

                                    if (assessment.TraineeSigned.HasValue && assessment.ExaminerSigned.HasValue)
                                    {
                                        signedResult = "Both";
                                    }
                                    else if (assessment.TraineeSigned.HasValue)
                                    {
                                        signedResult = "Trainee";
                                    }
                                    else if (assessment.ExaminerSigned.HasValue)
                                    {
                                        signedResult = "Examiner";
                                    }

                                    <tr>
                                        <td>@assessment.Name</td>
                                        <td>@assessment.CreatedTime.ToString("MM.dd.yyyy")</td>
                                        <td>@traineeName</td>
                                        <td>@examinerName</td>
                                        <td>@signedResult</td>
                                        <td>
                                            <a href="@Url.Action("EvaluationView", "Assessment", new { id = assessment.ID }, null)"
                                               class="btn text-primary"><i class="fas fa-search"></i></a>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Assessment create/edit Modal -->
<div class="modal" id="createAssessmentModal" tabindex="-1" role="dialog" aria-labelledby="createAssessmentLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAssessmentLabel"><span class="action"></span> Assessment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                        onclick="modalClose('createAssessmentModal')">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="assessmentModalBody">

                <partial name="_CreateAssessmentModalBody" model="Model" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light button-left" onclick="clearform('createAssessmentModal')">Close</button>
                <button type="button" class="btn btn-primary" onclick="validateAssessmentForm('createAssessmentForm')">
                    <span class="action">Create</span>
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop hide" style="display:none"></div>

<partial name="_DeleteAlertDialog" />
